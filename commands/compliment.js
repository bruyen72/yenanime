const compliments = [
    "Voc√™ √© incr√≠vel do jeito que √©! üåü",
    "Voc√™ tem um senso de humor fant√°stico! üòÑ",
    "Voc√™ √© extremamente atencioso e gentil! üíñ",
    "Voc√™ √© mais poderoso do que imagina! ‚ö°",
    "Voc√™ ilumina qualquer ambiente! ‚ú®",
    "Voc√™ √© um verdadeiro amigo! ü§ù",
    "Voc√™ me inspira muito! üåà",
    "Sua criatividade n√£o tem limites! üé®",
    "Voc√™ tem um cora√ß√£o de ouro! üíõ",
    "Voc√™ faz a diferen√ßa no mundo! üåç",
    "Sua positividade √© contagiante! üòä",
    "Voc√™ tem uma √©tica de trabalho incr√≠vel! üí™",
    "Voc√™ traz o melhor das pessoas! üå∏",
    "Seu sorriso alegra o dia de todos! üòÅ",
    "Voc√™ √© talentoso em tudo que faz! üéØ",
    "Sua bondade torna o mundo melhor! üïäÔ∏è",
    "Voc√™ tem uma perspectiva √∫nica e maravilhosa! üëÅÔ∏è",
    "Seu entusiasmo √© verdadeiramente inspirador! üî•",
    "Voc√™ √© capaz de conquistar grandes coisas! üèÜ",
    "Voc√™ sempre sabe como fazer algu√©m se sentir especial! üíù",
    "Sua confian√ßa √© admir√°vel! üëë",
    "Voc√™ tem uma alma linda! üå∫",
    "Sua generosidade n√£o tem limites! üéÅ",
    "Voc√™ tem um olhar agu√ßado para detalhes! üîç",
    "Sua paix√£o √© verdadeiramente motivadora! üöÄ",
    "Voc√™ √© um ouvinte incr√≠vel! üëÇ",
    "Voc√™ √© mais forte do que pensa! üíé",
    "Sua risada √© contagiante! üòÇ",
    "Voc√™ tem um dom natural para valorizar os outros! üåü",
    "Voc√™ torna o mundo melhor s√≥ por existir! üåª"
];

async function complimentCommand(sock, chatId, message) {
    try {
        if (!message || !chatId) {
            console.log('Invalid message or chatId:', { message, chatId });
            return;
        }

        let userToCompliment;
        
        // Check for mentioned users
        if (message.message?.extendedTextMessage?.contextInfo?.mentionedJid?.length > 0) {
            userToCompliment = message.message.extendedTextMessage.contextInfo.mentionedJid[0];
        }
        // Check for replied message
        else if (message.message?.extendedTextMessage?.contextInfo?.participant) {
            userToCompliment = message.message.extendedTextMessage.contextInfo.participant;
        }
        
        if (!userToCompliment) {
            await sock.sendMessage(chatId, { 
                text: 'üå∏ *Para elogiar algu√©m:*\n\n‚Ä¢ Marque a pessoa: `.compliment @usu√°rio`\n‚Ä¢ Ou responda uma mensagem com `.compliment`\n\n‚ú® *Espalhe positividade!* üíñ'
            });
            return;
        }

        const compliment = compliments[Math.floor(Math.random() * compliments.length)];

        // Add delay to avoid rate limiting
        await new Promise(resolve => setTimeout(resolve, 1000));

        await sock.sendMessage(chatId, { 
            text: `üíñ Oi @${userToCompliment.split('@')[0]}, ${compliment}`,
            mentions: [userToCompliment]
        });
    } catch (error) {
        console.error('Error in compliment command:', error);
        if (error.data === 429) {
            await new Promise(resolve => setTimeout(resolve, 2000));
            try {
                await sock.sendMessage(chatId, { 
                    text: '‚è∞ Aguarde alguns segundos e tente novamente!'
                });
            } catch (retryError) {
                console.error('Error sending retry message:', retryError);
            }
        } else {
            try {
                await sock.sendMessage(chatId, { 
                    text: '‚ùå Erro ao enviar o elogio. Tente novamente!'
                });
            } catch (sendError) {
                console.error('Error sending error message:', sendError);
            }
        }
    }
}

module.exports = { complimentCommand };
